@include keyframes(move-up) {
  0% {
    top: 25px;
    opacity: 1;
  }

  100% {
    top: -50px;
    opacity: 0;
  }
}

.game2048 {
  .heading {
    height: 20px;
  }

  .score-container {
    $height: 25px;

    position: relative;
    float: right;
    background: $game-container-background;
    padding: 15px 25px;
    font-size: $height;
    line-height: $height + 22px;
    font-weight: bold;
    border-radius: 3px;
    color: white;
    margin-top: 8px;

    &:after {
      position: absolute;
      width: 100%;
      top: 10px;
      left: 0;
      content: "Score";
      text-transform: uppercase;
      font-size: 13px;
      line-height: 13px;
      text-align: center;
      color: $tile-color;
    }

    .score-addition {
      position: absolute;
      right: 30px;
      color: red;
      font-size: $height;
      line-height: $height;
      font-weight: bold;
      color: rgba($text-color, .9);
      z-index: 100;
      @include animation(move-up 600ms ease-in);
      @include animation-fill-mode(both);
    }
  }

  p {
    margin-top: 0;
    margin-bottom: 10px;
    line-height: 1.65;
  }

  a {
    color: $text-color;
    font-weight: bold;
    text-decoration: underline;
    cursor: pointer;
  }

  strong {
    &.important {
      text-transform: uppercase;
    }
  }

  hr {
    border: none;
    border-bottom: 1px solid lighten($text-color, 40%);
    margin-top: 20px;
    margin-bottom: 30px;
  }

  .container {
    width: $field-width;
    margin: 0 auto;

    @include smaller(480px) {
      width: $field-width2;
    }
  }

  @include keyframes(fade-in) {
    0% {
      opacity: 0;
    }

    100% {
      opacity: 1;
    }
  }

  

  .game-container { // Game field mixin used to render CSS at different width
    margin-top: 40px;
    position: relative;
    padding: $grid-spacing;

    @include smaller (480px){
      padding: $grid-spacing2;
    }

    // cursor: default;
    // -webkit-touch-callout: none;
    // -webkit-user-select: none;
    // -moz-user-select: none;

    background: $game-container-background;
    border-radius: $tile-border-radius * 2;
    width: $field-width;
    height: $field-width;
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;

    @include smaller (480px){
      width: $field-width2;
      height: $field-width2;
    }

    .game-message {
      display: none;

      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      background: rgba($tile-color, .5);
      z-index: 100;

      text-align: center;

      p {
        font-size: 60px;
        font-weight: bold;
        height: 60px;
        line-height: 60px;
        margin-top: 222px;
        // height: $field-width;
        // line-height: $field-width;
      }

      .lower {
        display: block;
        margin-top: 59px;
      }

      a {
        display: inline-block;
        background: darken($game-container-background, 20%);
        border-radius: 3px;
        padding: 0 20px;
        text-decoration: none;
        color: $bright-text-color;
        height: 40px;
        line-height: 42px;
        margin-left: 9px;
        // margin-top: 59px;
      }

      @include animation(fade-in 800ms ease $transition-speed * 12);
      @include animation-fill-mode(both);

      &.game-won {
        background: rgba($tile-gold-color, .5);
        color: $bright-text-color;
      }

      &.game-won, &.game-over {
        display: block;
      }
    }
  }

  .grid-container {
    position: absolute;
    z-index: 1;
  }

  .grid-row {
    margin-bottom: $grid-spacing;

    @include smaller (480px){
      margin-bottom: $grid-spacing2;
    }

    &:last-child {
      margin-bottom: 0;
    }

    &:after {
      content: "";
      display: block;
      clear: both;
    }
  }

  .grid-cell {
    width: $tile-size;
    height: $tile-size;
    margin-right: $grid-spacing;
    float: left;

    border-radius: $tile-border-radius;

    background: rgba($tile-color, .35);

    @include smaller (480px){
      width: $tile-size2;
      height: $tile-size2;
      margin-right: $grid-spacing2;
    }

    &:last-child {
      margin-right: 0;
    }
  }

  .tile-container {
    position: absolute;
    z-index: 2;
  }

  .tile {
    width: $tile-size;
    height: $tile-size;
    line-height: $tile-size + 10px;

    @include smaller (480px){
      width: $tile-size2;
      height: $tile-size2;
      line-height: $tile-size2 + 10px;
    }

    // Build position classes
    @for $x from 1 through $grid-row-cells {
      @for $y from 1 through $grid-row-cells {
        &.tile-position-#{$x}-#{$y} {
          position: absolute;
          left: round(($tile-size + $grid-spacing) * ($x - 1));
          top: round(($tile-size + $grid-spacing) * ($y - 1));

          @include smaller (480px){
            left: round(($tile-size2 + $grid-spacing2) * ($x - 1));
            top: round(($tile-size2 + $grid-spacing2) * ($y - 1));
          }
        }
      }
    }
  }// End of game-field mixin
  // @include game-field;

  .tile {
    border-radius: $tile-border-radius;

    background: $tile-color;
    text-align: center;
    font-weight: bold;
    z-index: 10;

    font-size: 55px;

    @include transition($transition-speed ease-in-out);
    @include transition-property(top, left);

    $base: 2;
    $exponent: 1;
    $limit: 11;

    // Colors for all 11 states, false = no special color
    $special-colors: false false, // 2
    false false, // 4
    #f78e48 true, // 8
    #fc5e2e true, // 16
    #ff3333 true, // 32
    #ff0000 true, // 64
    false true, // 128
    false true, // 256
    false true, // 512
    false true, // 1024
    false true; // 2048

    // Build tile colors
    @while $exponent <= $limit {
      $power: pow($base, $exponent);

      &.tile-#{$power} {
        // Calculate base background color
        $gold-percent: ($exponent - 1) / ($limit - 1) * 100;
        $mixed-background: mix($tile-gold-color, $tile-color, $gold-percent);

        $nth-color: nth($special-colors, $exponent);

        $special-background: nth($nth-color, 1);
        $bright-color: nth($nth-color, 2);

        @if $special-background {
          $mixed-background: mix($special-background, $mixed-background, 55%);
        }

        @if $bright-color {
          color: $bright-text-color;
        }

        // Set background
        background: $mixed-background;

        // Add glow
        $glow-opacity: max($exponent - 4, 0) / ($limit - 4);

        @if not $special-background {
          box-shadow: 0 0 30px 10px rgba($tile-gold-glow-color, $glow-opacity / 1.8),
          inset 0 0 0 1px rgba(white, $glow-opacity / 3);
        }

        // Adjust font size for bigger numbers
        @if $power >= 100 and $power < 1000 {
          font-size: 45px;

          // Media queries placed here to avoid carrying over the rest of the logic
          @include smaller(480px) {
            font-size: 25px;
          }
        } @else if $power >= 1000 {
          font-size: 35px;

          @include smaller(480px) {
            font-size: 15px;
          }
        }
      }

      $exponent: $exponent + 1;
    }
  }

  @include keyframes(appear) {
    0% {
      opacity: 0;
      -webkit-transform: scale(0);
      -moz-transform: scale(0);
    }

    100% {
      opacity: 1;
      -webkit-transform: scale(1);
      -moz-transform: scale(1);
    }
  }

  .tile-new {
    @include animation(appear 200ms ease $transition-speed);
    @include animation-fill-mode(both);
  }

  @include keyframes(pop) {
    0% {
      -webkit-transform: scale(0);
      -moz-transform: scale(0);
    }

    50% {
      -webkit-transform: scale(1.2);
      -moz-transform: scale(1.2);
    }

    100% {
      -webkit-transform: scale(1);
      -moz-transform: scale(1);
    }
  }

  .tile-merged {
    z-index: 20;
    @include animation(pop 200ms ease $transition-speed);
    @include animation-fill-mode(both);
  }

  .game-intro {
    margin-bottom: 0;
  }

  .game-explanation {
    margin-top: 50px;
  }

  @include smaller(480px) {
    // Redefine variables for smaller screens
    // $field-width: 280px;
    // $grid-spacing: 10px;
    // $grid-row-cells: 4;
    // $tile-size: ($field-width - $grid-spacing * ($grid-row-cells + 1)) / $grid-row-cells;
    // $tile-border-radius: 3px;

    .score-container {
      margin-top: 0;
    }

    .heading {
      margin-bottom: 10px;
    }

    // Render the game field at the right width
    // @include game-field;

    // .game-container {
    //   margin-top: 20px;
    // }

    // Rest of the font-size adjustments in the tile class
    .tile {
      font-size: 35px;
    }

    .game-message {
      p {
        font-size: 30px !important;
        height: 30px !important;
        line-height: 30px !important;
        margin-top: 90px !important;
      }

      .lower {
        margin-top: 30px !important;
      }
    }
  }
}

#callback-formss > div {
  padding: 0;

  > form {
    padding: 60px;
  }

  .thank-you {
    padding: 60px;
  }

  > div > .game2048 {
    padding: 20px;
  }
}

.thank-you {
  .buttons {
    display: flex;
    justify-content: space-between;
    flex-wrap: wrap;
    margin-left: -15px;
    margin-right: -15px;

    .button {
      margin: 15px;
      margin-bottom: 0;
      max-width: 200px;
      flex-grow: 1;
    }
  }
}